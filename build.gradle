plugins {
    id 'java'
    id 'maven-publish'
    id 'br.dev.rplus.versioning' version '1.0.0'
}

group = 'br.dev.rplus'
version = versioning.name

ext.defaultManifestAttributes = { Project p ->
    return ['Manifest-Version'      : '1.0',
            'Specification-Version' : p.version,
            'Specification-Vendor'  : 'R+ Dev',
            'Specification-Title'   : 'Finv',
            'Implementation-Version': p.version,
            'Implementation-Vendor' : 'R+ Dev',
            'Implementation-Title'  : 'Finv',
            'Built-Date'            : new Date().toString(),
            'Built-JDK'             : System.getProperty('java.version'),
            'Built-OS'              : System.getProperty('os.name'),
            'Built-OS-Version'      : System.getProperty('os.version'),
            'Built-OS-Architecture' : System.getProperty('os.arch')]
}

ext.configurePom = { MavenPublication pub ->
    pub.pom {
        name.set(pub.artifactId)
        description.set('Coffee Utilities Package (CUP) is a Java library that provides a set of utilities for Java developers.')
        url.set('https://github.com/rafandoo/cup')

        licenses {
            license {
                name.set('Apache License, Version 2.0')
                url.set('https://raw.githubusercontent.com/rafandoo/cup/refs/heads/main/LICENSE')
                distribution.set('repo')
            }
        }

        developers {
            developer {
                id.set('rafandoo')
                name.set('Rafael Camargo')
                email.set('rafaelcamargo.inf@gmail.com')
            }
        }

        scm {
            connection.set('scm:git:git://github.com/rafandoo/cup.git')
            developerConnection.set('scm:git:ssh://git@github.com/rafandoo/cup.git')
            url.set('https://github.com/rafandoo/cup')
            tag.set('HEAD')
        }

        issueManagement {
            system.set('GitHub Issues')
            url.set('https://github.com/rafandoo/cup/issues')
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://raw.githubusercontent.com/rafandoo/cup/mvn-repo/'
    }
}

dependencies {
    implementation 'br.dev.rplus:cup-core:0.2.3'
    implementation 'br.dev.rplus:cup-objects:0.2.3'
    implementation 'br.dev.rplus:cup-http:0.2.3'
    implementation 'org.json:json:20240303'

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    testImplementation platform('org.junit:junit-bom:5.13.4')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

test {
    useJUnitPlatform()
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes = defaultManifestAttributes(project)
    }

    exclude('**/.gitkeep')
}

tasks.register('fatJar', Jar) {
    group = 'build'
    description = 'Builds a JAR with dependencies (fat jar).'

    archiveClassifier.set('aio')

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude('META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

publishing {
    publications {
        create('mavenJava', MavenPublication) {
            from components.java
            configurePom(delegate)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${githubRepository}")
            credentials {
                username = "${githubUsername}"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
